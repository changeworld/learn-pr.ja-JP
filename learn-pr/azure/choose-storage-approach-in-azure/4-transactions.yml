### YamlMime:ModuleUnit
uid: learn.choose-storage-approach-in-azure.4-transactions
metadata:
  title: トランザクションで複数の操作をグループ化する
  description: トランザクションで複数の操作をグループ化する
  ms.date: 09/24/2018
  author: mimig1
  ms.author: mimig
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
  ms.openlocfilehash: b2dd93349073927a9091d92192f6f79b78929ca0
  ms.sourcegitcommit: b7caaf32cd0aac946417e0da375f4a82ae7187ab
  ms.translationtype: HT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/13/2018
  ms.locfileid: "44750784"
title: トランザクションで複数の操作をグループ化する
durationInMinutes: 10
content: >
  [!include[](includes/4-transactions.md)]
quiz:
  title: トランザクション
  questions:
  - content: 製品のデータに最も適したトランザクション データベース システムの種類はどれですか?
    choices:
    - content: OLAP
      isCorrect: false
    - content: OLTP
      isCorrect: true
      correctExplanation: OLTP システムでは、大きなユーザー セットがサポートされ、応答時間が速く、大量のデータが処理され、高可用性であり、小規模または比較的シンプルなトランザクションに最適です。
  - content: 在庫更新と支払い処理の操作が同じトランザクション内にあるものとします。 ユーザーは全額を店のクレジットで支払おうとして、電話とラップトップから同時に厳密に同じ注文を送信します。 基になっているのは ACID 準拠のデータベースです。どうなるでしょうか?
    choices:
    - content: 両方の注文が処理され、店内クレジットが使用されます。
      isCorrect: false
    - content: 一方の注文は処理されて店内クレジットを使用し、もう一方の注文は買い物かごの中の商品の在庫残を更新しますが、注文は完了しません。
      isCorrect: false
    - content: 一方の注文は処理されて店内クレジットを使用し、もう一方の注文は処理されません。
      isCorrect: true
      correctExplanation: 2 番目の注文では、店内クレジットが既に使用されていることを認識すると、トランザクションがロールバックされます。
