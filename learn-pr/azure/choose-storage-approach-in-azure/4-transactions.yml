### YamlMime:ModuleUnit
uid: learn.choose-storage-approach-in-azure.4-transactions
metadata:
  title: トランザクションで複数の操作をグループ化する
  description: トランザクションで複数の操作をグループ化する
  displayType: one-column
  ms.openlocfilehash: deca0e972e897760f2179b8176dfdd079790a423
  ms.sourcegitcommit: 91b4553dbbbf6d8b6b359142332d0654aae326e8
  ms.translationtype: HT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 08/30/2018
  ms.locfileid: "43252608"
title: トランザクションで複数の操作をグループ化する
durationInMinutes: 10
content: >
  [!include[](includes/4-transactions.md)]
quiz:
  title: トランザクション
  questions:
  - content: 商品データに必要なシステムの種類
    choices:
    - content: OLAP
      isCorrect: false
      incorrectExplanation: 不正解です。OLAP システムは、複雑なクエリやトランザクションを必要とし、低遅延である必要はないデータに最適です。 商品データはすばやく変更する必要があり、低遅延で高スループットのシステムが必要です。
    - content: OLTP
      isCorrect: true
      correctExplanation: 正解です。OLTP システムは、多数のユーザーをサポートし、応答時間が速く、大量のデータを処理し、高可用性であり、通常は小規模または比較的単純なトランザクションを処理します。これは、商品データ セットに最適です。
  - content: 在庫を更新して支払い処理するための操作が同じトランザクション内にある場合、ユーザーが電話とラップトップから ACID 準拠のデータベースに対してまったく同じ注文を送信すると、どうなるでしょうか。
    choices:
    - content: 1 番目の注文は完了し、クレジット残高が 0 に変更されます。2 番目の注文は、ユーザーに店内のクレジット残高がないことを示すように更新されます。
      isCorrect: false
      incorrectExplanation: 不正解です。トランザクション データベースの分離性のため、2 つのトランザクションは独立して処理され、2 番目のトランザクションが完了して失敗するまで、1 番目のトランザクションが 2 番目の処理中のトランザクションを変更することはありません。
    - content: 一方の注文は処理されて店内クレジットを使用し、もう一方の注文は買い物かごの中の商品の在庫残を更新しますが、注文は完了しません。
      isCorrect: false
      incorrectExplanation: 不正解です。トランザクション データベースでの原子性のため、2 番目の注文は失敗した注文に対する在庫残を更新しません。
    - content: 一方の注文は処理されて店内クレジットを使用し、もう一方の注文は処理されません。
      isCorrect: true
      correctExplanation: 正解です。2 番目の注文は、店内クレジットが既に使用されていることを認識すると、トランザクションをロールバックします。
