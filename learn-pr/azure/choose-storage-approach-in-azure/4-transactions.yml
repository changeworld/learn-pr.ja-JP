### YamlMime:ModuleUnit
uid: learn.choose-storage-approach-in-azure.4-transactions
metadata:
  title: <span data-ttu-id="25f85-101">トランザクションで複数の操作をグループ化する</span><span class="sxs-lookup"><span data-stu-id="25f85-101">Group multiple operations in a transaction</span></span>
  description: <span data-ttu-id="25f85-102">トランザクションで複数の操作をグループ化する</span><span class="sxs-lookup"><span data-stu-id="25f85-102">Group multiple operations in a transaction</span></span>
  ms.date: 09/24/2018
  author: markjulmar
  ms.author: smmark
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
  ms.openlocfilehash: 248c574b0e661f6dbd0e11d1af8a989ccba7fd40
  ms.sourcegitcommit: f9023fdf01347b57619974b6961e1565cfc483d9
  ms.translationtype: HT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/09/2018
  ms.locfileid: "44230759"
title: <span data-ttu-id="25f85-103">トランザクションで複数の操作をグループ化する</span><span class="sxs-lookup"><span data-stu-id="25f85-103">Group multiple operations in a transaction</span></span>
durationInMinutes: 10
content: >
  [!include[](includes/4-transactions.md)]
quiz:
  title: <span data-ttu-id="25f85-104">トランザクション</span><span class="sxs-lookup"><span data-stu-id="25f85-104">Transactions</span></span>
  questions:
  - content: <span data-ttu-id="25f85-105">商品データに必要なシステムの種類</span><span class="sxs-lookup"><span data-stu-id="25f85-105">What kind of system does the product data need?</span></span>
    choices:
    - content: <span data-ttu-id="25f85-106">OLAP</span><span class="sxs-lookup"><span data-stu-id="25f85-106">OLAP</span></span>
      isCorrect: false
      incorrectExplanation: <span data-ttu-id="25f85-107">不正解です。OLAP システムは、複雑なクエリやトランザクションを必要とし、低遅延である必要はないデータに最適です。</span><span class="sxs-lookup"><span data-stu-id="25f85-107">No, an OLAP system is best for data that requires complex queries or transactions, and doesn't require low latency.</span></span> <span data-ttu-id="25f85-108">製品データはすばやく変更する必要があり、これには低遅延で高スループットのシステムが必要です。</span><span class="sxs-lookup"><span data-stu-id="25f85-108">The product data needs to be modified quickly, and needs a low-latency, high-throughput system.</span></span>
    - content: <span data-ttu-id="25f85-109">OLTP</span><span class="sxs-lookup"><span data-stu-id="25f85-109">OLTP</span></span>
      isCorrect: true
      correctExplanation: <span data-ttu-id="25f85-110">正解です。OLTP システムでは、多数のユーザーがサポートされ、応答時間が速く、大量のデータが処理され、高可用性であり、通常は小規模または比較的シンプルなトランザクションが処理されます。これは、製品データ セットに最適です。</span><span class="sxs-lookup"><span data-stu-id="25f85-110">Yes, OLTP systems support lots of users, have quick response times, handle large volumes of data, are highly available, and typically handle small or relatively simple transactions, which is perfect for the product data set.</span></span>
  - content: <span data-ttu-id="25f85-111">在庫を更新する操作と支払いを処理する操作が同じトランザクション内にあった場合、全額に店のクレジットを適用しようとしているユーザーが、まったく同じ注文を、電話とラップトップから ACID 準拠のデータベースに対して送信した場合、どうなるでしょうか。</span><span class="sxs-lookup"><span data-stu-id="25f85-111">If the operations to update inventory and process payments were in the same transaction, and a user was attemtping to apply a store credit for the full amount and submitted the exact same order via phone and by laptop to an ACID-compliant database, what would happen?</span></span>
    choices:
    - content: <span data-ttu-id="25f85-112">1 番目の注文は完了し、クレジット残高が 0 に変更されます。2 番目の注文は、ユーザーに店内のクレジット残高がないことを示すように更新されます。</span><span class="sxs-lookup"><span data-stu-id="25f85-112">The first order would complete, the remaining credit account would change to zero, and the second order would be updated to show that the user had no in-store credit remaining.</span></span>
      isCorrect: false
      incorrectExplanation: <span data-ttu-id="25f85-113">不正解です。トランザクション データベースの分離性のため、2 つのトランザクションは独立して処理され、2 番目のトランザクションが完了して失敗するまで、1 番目のトランザクションによって 2 番目の処理中のトランザクションが変更されることはありません。</span><span class="sxs-lookup"><span data-stu-id="25f85-113">No, due to the Isolation in transactional databases, the two transactions are handled independently, and the first transaction would not modify the second in-process transaction until the second transaction completed and failed.</span></span>
    - content: <span data-ttu-id="25f85-114">一方の注文は処理されて店内クレジットを使用し、もう一方の注文は買い物かごの中の商品の在庫残を更新しますが、注文は完了しません。</span><span class="sxs-lookup"><span data-stu-id="25f85-114">One order would be processed and would use the in-store credit, and the other order would update the remaining inventory for the items in the basket, but would not complete the order.</span></span>
      isCorrect: false
      incorrectExplanation: <span data-ttu-id="25f85-115">不正解です。トランザクション データベースでの原子性のため、2 番目の注文によって、失敗した注文に対する在庫残は更新されません。</span><span class="sxs-lookup"><span data-stu-id="25f85-115">No, due to the Atomicity in transactional databases, the second order would not update the remaining inventory for the failed order.</span></span>
    - content: <span data-ttu-id="25f85-116">一方の注文は処理されて店内クレジットを使用し、もう一方の注文は処理されません。</span><span class="sxs-lookup"><span data-stu-id="25f85-116">One order would be processed and would use the in-store credit, and the other order would not be processed.</span></span>
      isCorrect: true
      correctExplanation: <span data-ttu-id="25f85-117">正解です。2 番目の注文では、店内クレジットが既に使用されていることを認識すると、トランザクションがロールバックされます。</span><span class="sxs-lookup"><span data-stu-id="25f85-117">Yes, once the second order determined the in-store credit had already been used, it would roll back the transaction.</span></span>
